name: 'TF - Plan & Apply'

on:
  push:
    paths:
    - terraform/**
    - .github/workflows/tf.plan_apply.yml
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
env:
  OPNSENSE_API_KEY:                     ${{ secrets.OPNSENSE_API_KEY }}
  OPNSENSE_API_SECRET:                  ${{ secrets.OPNSENSE_API_SECRET }}
  OPNSENSE_URI:                         ${{ secrets.OPNSENSE_URI }}
  CLOUDFLARE_API_TOKEN:                 ${{ secrets.CLOUDFLARE_API_KEY }}
  TF_VAR_oracle_fingerprint:            ${{ secrets.ORACLE_TF_VAR_FINGERPRINT }}
  TF_VAR_oracle_ssh_private_key_base64: ${{ secrets.ORACLE_TF_VAR_PRIVATE_KEY_BASE64 }}
  TF_VAR_oracle_ssh_public_key_base64:  ${{ secrets.ORACLE_TF_VAR_PUBLIC_KEY_BASE64 }}
  TF_VAR_oracle_region:                 ${{ secrets.ORACLE_TF_VAR_REGION }}
  TF_VAR_oracle_tenancy_ocid:           ${{ secrets.ORACLE_TF_VAR_TENANCY_OCID }}
  TF_VAR_oracle_user_ocid:              ${{ secrets.ORACLE_TF_VAR_USER_OCID }}

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: [self-hosted, linux, ARM64]
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Node.JS
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 20

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false -out="tfplan"

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false "tfplan"
