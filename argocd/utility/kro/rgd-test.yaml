apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: rgd-test
spec:
  # kro uses this simple schema to create your CRD schema and apply it
  # The schema defines what users can provide when they instantiate the RGD (create an instance).
  schema:
    apiVersion: v1alpha1
    kind: RGDTest
    spec:
      # Spec fields that users can provide.
      name: string
      image: string | default="nginx"
    status:
      # Fields the controller will inject into instances status.
      deploymentConditions: ${deployment.status.conditions}
      availableReplicas: ${deployment.status.availableReplicas}

  # Define the resources this API will manage.
  resources:
    - id: deployment
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${schema.spec.name} # Use the name provided by user
          ownerReferences:
            - apiVersion: kro.run/v1alpha1
              blockOwnerDeletion: true
              controller: true
              kind: RGDTest
              name: rgd-test-instance
              uid: d2e85b7d-6f52-4a12-8b0a-96b954ad3a18
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: ${schema.spec.name}
          template:
            metadata:
              labels:
                app: ${schema.spec.name}
            spec:
              containers:
                - name: ${schema.spec.name}
                  image: ${schema.spec.image} # Use the image provided by user
                  ports:
                    - containerPort: 80

    - id: service
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${schema.spec.name}-service
          ownerReferences:
            - apiVersion: kro.run/v1alpha1
              blockOwnerDeletion: true
              controller: true
              kind: RGDTest
              name: rgd-test-instance
              uid: d2e85b7d-6f52-4a12-8b0a-96b954ad3a18
        spec:
          selector: ${deployment.spec.selector.matchLabels} # Use the deployment selector
          ports:
            - protocol: TCP
              port: 80
              targetPort: 80