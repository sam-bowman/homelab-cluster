- name: "03 - INSTALL BASE APPS TO CLUSTER - K3S_MASTER"
  hosts: K3S_MASTER
  environment:
    K8S_AUTH_KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  tasks:
  - name: "-- Apply MetalLB manifest to cluster --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/metallb/manifest.yaml"

  - name: "-- Define MetalLB IP Range - Autoassigned IPs --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/metallb/ip-range-autoassigned.yaml"

  - name: "-- Define MetalLB IP Range - Reserved IPs --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/metallb/ip-range-manualassigned.yaml"

  - name: "-- Define MetalLB L2Advertisement for routing & ARP --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/metallb/l2-advertisement.yaml"

  - name: "-- Copy custom traefik helm-chart-config to k3s configs --"
    become: true
    shell: "cat {{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/taefik/helmchartconfig.yaml > /var/lib/rancher/k3s/server/manifests/traefik-helmchartconfig.yaml"

  - name: "-- Modify Traefik helm chart config to run more replicas --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/taefik/helmchartconfig.yaml"

  - name: "-- Copy custom coredns manifest to k3s configs --"
    become: true
    shell: "cat {{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/coredns/manifest.yaml > /var/lib/rancher/k3s/server/manifests/coredns.yaml"

  - name: "-- Enable k8s_external on coredns for external resolution --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/coredns/manifest.yaml"
  
  - name: "-- Define service for coredns for external resolution - udp --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/coredns/service-tcp.yaml"

  - name: "-- Define service for coredns for external resolution - tcp --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/base/coredns/service-udp.yaml"

  - name: "-- Create ArgoCD Namespace --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/argocd/namespace.yaml"

  - name: "-- Apply the ArgoCD Manifest to the cluster --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/argocd/install.yaml"

  - name: "-- Patch ArgoCD Config Map to set insecure mode --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/argocd/config-map.yaml"
  
  - name: "-- Bootstrap base ArgoCD app pointing at homelab-cluster repo --"
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      src: "{{ ansible_env.HOME }}/repos/homelab-cluster/argocd/argocd/app.yaml"

  - name: "-- Get ArgoCD Admin password --"
    become: true
    shell: "kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d"
    register: argocd_admin_pass

  - name: "-- Output ArgoCD Admin password to console --"
    debug:
      msg: "{{ argocd_admin_pass.stdout }}"
    